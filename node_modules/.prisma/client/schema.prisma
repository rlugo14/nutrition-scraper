generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Resource {
    id          Int    @id @default(autoincrement())
    displayName String
    slug        String @unique
}

model Label {
    id       Int       @id @default(autoincrement())
    name     String    @unique
    products Product[]
}

model Fat {
    id                   Int                 @id @default(autoincrement())
    total                TotalFat?           @relation(fields: [totalFatId], references: [id])
    totalFatId           Int                 @unique
    saturated            SaturatedFat?       @relation(fields: [saturatedFatId], references: [id])
    saturatedFatId       Int?                @unique
    monounsaturated      MonosaturatedFat?   @relation(fields: [monosaturatedFatId], references: [id])
    monosaturatedFatId   Int?                @unique
    polyunsaturated      PolyunsaturatedFat? @relation(fields: [polyunsaturatedFatId], references: [id])
    polyunsaturatedFatId Int?                @unique
    trans                TransFat?           @relation(fields: [transFatId], references: [id])
    transFatId           Int?                @unique
    nutritionFacts       NutritionFact[]
}

model TotalFat {
    id            Int          @id @default(autoincrement())
    measurement   Measurement? @relation(fields: [measurementId], references: [id])
    fat           Fat?
    measurementId Int
}

model SaturatedFat {
    id            Int         @id @default(autoincrement())
    measurement   Measurement @relation(fields: [measurementId], references: [id])
    fat           Fat?
    measurementId Int         @unique
}

model MonosaturatedFat {
    id            Int         @id @default(autoincrement())
    measurement   Measurement @relation(fields: [measurementId], references: [id])
    fat           Fat?
    measurementId Int         @unique
}

model PolyunsaturatedFat {
    id            Int         @id @default(autoincrement())
    measurement   Measurement @relation(fields: [measurementId], references: [id])
    fat           Fat?
    measurementId Int         @unique
}

model TransFat {
    id            Int         @id @default(autoincrement())
    measurement   Measurement @relation(fields: [measurementId], references: [id])
    fat           Fat?
    measurementId Int         @unique
}

model Carbohydrate {
    id                  Int                @id @default(autoincrement())
    total               TotalCarbohydrate? @relation(fields: [totalCarbohydrateId], references: [id])
    totalCarbohydrateId Int?               @unique
    sugar               SugarCarbohydrate? @relation(fields: [sugarCarbohydrateId], references: [id])
    sugarCarbohydrateId Int?               @unique
    nutritionFacts      NutritionFact[]
}

model TotalCarbohydrate {
    id            Int           @id @default(autoincrement())
    measurement   Measurement   @relation(fields: [measurementId], references: [id])
    carbohydrate  Carbohydrate?
    measurementId Int           @unique
}

model SugarCarbohydrate {
    id            Int           @id @default(autoincrement())
    measurement   Measurement   @relation(fields: [measurementId], references: [id])
    carbohydrate  Carbohydrate?
    measurementId Int           @unique
}

model Vitamin {
    id             Int             @id @default(autoincrement())
    C              VitaminC?       @relation(fields: [vitaminCId], references: [id])
    A              VitaminA?       @relation(fields: [vitaminAId], references: [id])
    D              VitaminD?       @relation(fields: [vitaminDId], references: [id])
    E              VitaminE?       @relation(fields: [vitaminEId], references: [id])
    B1             VitaminB1?      @relation(fields: [vitaminB1Id], references: [id])
    B2             VitaminB2?      @relation(fields: [vitaminB2Id], references: [id])
    B6             VitaminB6?      @relation(fields: [vitaminB6Id], references: [id])
    B12            VitaminB12?     @relation(fields: [vitaminB12Id], references: [id])
    nutritionFacts NutritionFact[]
    vitaminCId     Int?            @unique
    vitaminAId     Int?            @unique
    vitaminDId     Int?            @unique
    vitaminEId     Int?            @unique
    vitaminB1Id    Int?            @unique
    vitaminB2Id    Int?            @unique
    vitaminB6Id    Int?            @unique
    vitaminB12Id   Int?            @unique
    measurements   Measurement[]
}

model VitaminC {
    id            Int         @id @default(autoincrement())
    measurement   Measurement @relation(fields: [measurementId], references: [id])
    vitamin       Vitamin?
    measurementId Int         @unique
}

model VitaminA {
    id            Int         @id @default(autoincrement())
    measurement   Measurement @relation(fields: [measurementId], references: [id])
    vitamin       Vitamin?
    measurementId Int         @unique
}

model VitaminD {
    id            Int         @id @default(autoincrement())
    measurement   Measurement @relation(fields: [measurementId], references: [id])
    vitamin       Vitamin?
    measurementId Int         @unique
}

model VitaminE {
    id            Int         @id @default(autoincrement())
    measurement   Measurement @relation(fields: [measurementId], references: [id])
    vitamin       Vitamin?
    measurementId Int         @unique
}

model VitaminB1 {
    id            Int         @id @default(autoincrement())
    measurement   Measurement @relation(fields: [measurementId], references: [id])
    vitamin       Vitamin?
    measurementId Int         @unique
}

model VitaminB2 {
    id            Int         @id @default(autoincrement())
    measurement   Measurement @relation(fields: [measurementId], references: [id])
    vitamin       Vitamin?
    measurementId Int         @unique
}

model VitaminB6 {
    id            Int         @id @default(autoincrement())
    measurement   Measurement @relation(fields: [measurementId], references: [id])
    vitamin       Vitamin?
    measurementId Int         @unique
}

model VitaminB12 {
    id            Int         @id @default(autoincrement())
    measurement   Measurement @relation(fields: [measurementId], references: [id])
    vitamin       Vitamin?
    measurementId Int         @unique
}

model Salt {
    id            Int         @id @default(autoincrement())
    minerals      Mineral[]
    measurement   Measurement @relation(fields: [measurementId], references: [id])
    measurementId Int         @unique
}

model Zinc {
    id            Int         @id @default(autoincrement())
    minerals      Mineral[]
    measurement   Measurement @relation(fields: [measurementId], references: [id])
    measurementId Int         @unique
}

model Iron {
    id            Int         @id @default(autoincrement())
    minerals      Mineral[]
    measurement   Measurement @relation(fields: [measurementId], references: [id])
    measurementId Int         @unique
}

model Magnesium {
    id            Int         @id @default(autoincrement())
    minerals      Mineral[]
    measurement   Measurement @relation(fields: [measurementId], references: [id])
    measurementId Int         @unique
}

model Chloride {
    id            Int         @id @default(autoincrement())
    minerals      Mineral[]
    measurement   Measurement @relation(fields: [measurementId], references: [id])
    measurementId Int         @unique
}

model Manganese {
    id            Int         @id @default(autoincrement())
    minerals      Mineral[]
    measurement   Measurement @relation(fields: [measurementId], references: [id])
    measurementId Int         @unique
}

model Sulfur {
    id            Int         @id @default(autoincrement())
    minerals      Mineral[]
    measurement   Measurement @relation(fields: [measurementId], references: [id])
    measurementId Int         @unique
}

model Potassium {
    id            Int         @id @default(autoincrement())
    minerals      Mineral[]
    measurement   Measurement @relation(fields: [measurementId], references: [id])
    measurementId Int         @unique
}

model Fluoride {
    id            Int         @id @default(autoincrement())
    minerals      Mineral[]
    measurement   Measurement @relation(fields: [measurementId], references: [id])
    measurementId Int         @unique
}

model Phosphorous {
    id            Int         @id @default(autoincrement())
    minerals      Mineral[]
    measurement   Measurement @relation(fields: [measurementId], references: [id])
    measurementId Int         @unique
}

model Copper {
    id            Int         @id @default(autoincrement())
    minerals      Mineral[]
    measurement   Measurement @relation(fields: [measurementId], references: [id])
    measurementId Int         @unique
}

model Iodine {
    id            Int         @id @default(autoincrement())
    minerals      Mineral[]
    measurement   Measurement @relation(fields: [measurementId], references: [id])
    measurementId Int         @unique
}

model Calcium {
    id            Int         @id @default(autoincrement())
    minerals      Mineral[]
    measurement   Measurement @relation(fields: [measurementId], references: [id])
    measurementId Int         @unique
}

model Mineral {
    id            Int             @id @default(autoincrement())
    salt          Salt?           @relation(fields: [saltId], references: [id])
    saltId        Int?
    nutritionFact NutritionFact[]
    iron          Iron?           @relation(fields: [ironId], references: [id])
    ironId        Int?
    zinc          Zinc?           @relation(fields: [zincId], references: [id])
    zincId        Int?
    magnesium     Magnesium?      @relation(fields: [magnesiumId], references: [id])
    magnesiumId   Int?
    chloride      Chloride?       @relation(fields: [chlorideId], references: [id])
    chlorideId    Int?
    manganese     Manganese?      @relation(fields: [manganeseId], references: [id])
    manganeseId   Int?
    sulfur        Sulfur?         @relation(fields: [sulfurId], references: [id])
    sulfurId      Int?
    potassium     Potassium?      @relation(fields: [potassiumId], references: [id])
    potassiumId   Int?
    fluoride      Fluoride?       @relation(fields: [fluorideId], references: [id])
    fluorideId    Int?
    phosphorous   Phosphorous?    @relation(fields: [phosphorousId], references: [id])
    phosphorousId Int?
    copper        Copper?         @relation(fields: [copperId], references: [id])
    copperId      Int?
    iodine        Iodine?         @relation(fields: [iodineId], references: [id])
    iodineId      Int?
    calcium       Calcium?        @relation(fields: [calciumId], references: [id])
    calciumId     Int?
}

model Unit {
    id           Int           @id @default(autoincrement())
    name         String        @unique
    abbreviation String        @unique @db.VarChar(255)
    measurements Measurement[]
}

model Measurement {
    id                 Int                  @id @default(autoincrement())
    value              Decimal?
    unit               Unit                 @relation(fields: [unitId], references: [id])
    unitId             Int
    servings           Serving[]
    vitamin            Vitamin[]
    salt               Salt[]
    zinc               Zinc[]
    iron               Iron[]
    magnesium          Magnesium[]
    chloride           Chloride[]
    manganese          Manganese[]
    sulfur             Sulfur[]
    potassium          Potassium[]
    fluoride           Fluoride[]
    phosphorous        Phosphorous[]
    copper             Copper[]
    iodine             Iodine[]
    calcium            Calcium[]
    totalFat           TotalFat[]
    saturatedFat       SaturatedFat[]
    monosaturatedFat   MonosaturatedFat[]
    polyunsaturatedFat PolyunsaturatedFat[]
    transFat           TransFat[]
    totalCarbohydrate  TotalCarbohydrate[]
    sugarCarbohydrate  SugarCarbohydrate[]
    vitaminC           VitaminC[]
    vitaminA           VitaminA[]
    vitaminD           VitaminD[]
    vitaminE           VitaminE[]
    vitaminB1          VitaminB1[]
    vitaminB2          VitaminB2[]
    vitaminB6          VitaminB6[]
    vitaminB12         VitaminB12[]
    energy             Energy[]
    protein            Protein?             @relation(fields: [proteinId], references: [id])
    proteinId          Int?
    cholesterol        Cholesterol?         @relation(fields: [cholesterolId], references: [id])
    cholesterolId      Int?
    ciber              Fiber?               @relation(fields: [fiberId], references: [id])
    fiberId            Int?
    cater              Water?               @relation(fields: [waterId], references: [id])
    waterId            Int?
}

model Serving {
    id            Int         @id @default(autoincrement())
    name          String
    measurement   Measurement @relation(fields: [measurementId], references: [id])
    measurementId Int
    products      Product[]
}

model Energy {
    id              Int           @id @default(autoincrement())
    measurements    Measurement[]
    nutritionFactId Int           @unique
    nutritionFact   NutritionFact @relation(fields: [nutritionFactId], references: [id])
}

model Protein {
    id            Int             @id @default(autoincrement())
    measurements  Measurement[]
    NutritionFact NutritionFact[]
}

model Cholesterol {
    id            Int             @id @default(autoincrement())
    measurements  Measurement[]
    NutritionFact NutritionFact[]
}

model Fiber {
    id            Int             @id @default(autoincrement())
    measurements  Measurement[]
    NutritionFact NutritionFact[]
}

model Water {
    id            Int             @id @default(autoincrement())
    measurements  Measurement[]
    NutritionFact NutritionFact[]
}

model NutritionFact {
    id             Int           @id @default(autoincrement())
    energy         Energy[]
    protein        Protein?      @relation(fields: [proteinId], references: [id])
    proteinId      Int?
    fats           Fat?          @relation(fields: [fatId], references: [id])
    fatId          Int?
    carbohydrate   Carbohydrate? @relation(fields: [carbohydrateId], references: [id])
    carbohydrateId Int?
    fiber          Fiber?        @relation(fields: [fiberId], references: [id])
    fiberId        Int?
    water          Water?        @relation(fields: [waterId], references: [id])
    vitamins       Vitamin?      @relation(fields: [vitaminId], references: [id])
    vitaminId      Int?
    minerals       Mineral?      @relation(fields: [mineralId], references: [id])
    mineralId      Int?
    cholesterol    Cholesterol?  @relation(fields: [cholesterolId], references: [id])
    cholesterolId  Int?
    waterId        Int?
    product        Product?      @relation(fields: [productId], references: [id])
    productId      Int?          @unique
}

model Product {
    id              Int            @id @default(autoincrement())
    name            String
    labels          Label[]
    ean             String?
    manufacturer    String
    group           String
    serving         Serving        @relation(fields: [servingId], references: [id])
    servingId       Int
    nutritionFact   NutritionFact?
    nutritionFactId Int?
}
